name: ðŸ¤– Auto PR

on:
  push:
    branches-ignore:
      - main
      - master
      - release
      - pre-release-*
  workflow_dispatch:

jobs:
  create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the current branch
        uses: actions/checkout@v4.1.7
        with:
          ref: ${{ github.ref }}  # Check out the branch that triggered the workflow
          fetch-depth: 0          # Fetch all history for the branch

      - name: Fetch the pre-release branch
        run: |
          git fetch origin pre-release:pre-release

      - name: Setup Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.x"

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Load Python cache
        uses: actions/cache@v4.0.2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-cache-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-cache-

      - name: Install Dependencies
        run: |
          make install-dev

      - name: Run Unit Tests
        run: |
          poetry run pytest
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Create or Update PR
        id: pr
        run: |
          SOURCE_BRANCH=$(git rev-parse --abbrev-ref HEAD)

          # Determine BASE_BRANCH based on SOURCE_BRANCH
          if [ "$SOURCE_BRANCH" = "release" ]; then
              BASE_BRANCH="main"
          elif [[ "$SOURCE_BRANCH" == pre-release-* ]]; then
              BASE_BRANCH="release"
          elif [[ "$SOURCE_BRANCH" == dev-* ]]; then
              BASE_BRANCH="pre-release"
          else
              BASE_BRANCH="release"
          fi

          # Check if BASE_BRANCH exists, if not, create it based on 'release' or 'main'
          if ! git rev-parse --verify origin/$BASE_BRANCH >/dev/null 2>&1; then
              echo "Base branch '$BASE_BRANCH' does not exist. Creating it."
              if [ "$BASE_BRANCH" = "pre-release" ]; then
                  git checkout -b $BASE_BRANCH origin/release || git checkout -b $BASE_BRANCH origin/main
                  git push origin $BASE_BRANCH
              else
                  echo "Error: Cannot determine the branch to base '$BASE_BRANCH' from."
                  exit 1
              fi
          fi

          # Debugging output
          echo "SOURCE_BRANCH: $SOURCE_BRANCH"
          echo "BASE_BRANCH: $BASE_BRANCH"

          # Check for commits between branches
          COMMITS=$(git log $BASE_BRANCH..$SOURCE_BRANCH)
          if [ -z "$COMMITS" ]; then
              echo "Error: No commits between $SOURCE_BRANCH and $BASE_BRANCH."
              exit 1
          fi

          # Create or update PR
          PR_URL=$(gh pr list --head $SOURCE_BRANCH --json url --jq '.[0].url' || echo "")
          PR_TITLE=$(poetry run pr-title-generate)
          echo "PR_TITLE: $PR_TITLE"

          if [ -z "$PR_URL" ]; then
              PR_URL=$(gh pr create --title "$PR_TITLE" --body "This PR was automatically generated by a GitHub Action" --base $BASE_BRANCH)
              echo "PR_URL: $PR_URL"
          fi

          PR_BODY=$(poetry run python3 .github/workflows/pr_body_gen.py $SOURCE_BRANCH $BASE_BRANCH)
          gh pr edit $PR_URL --title "$PR_TITLE" --body "$PR_BODY"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: ${{ env.PR_TITLE }}
        shell: /usr/bin/bash -e {0}
